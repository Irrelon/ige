"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_irrelon_ige"] = self["webpackChunk_irrelon_ige"] || []).push([["src_engine_core_IgeTweenController_ts"],{

/***/ "./src/engine/core/IgeTweenController.ts":
/*!***********************************************!*\
  !*** ./src/engine/core/IgeTweenController.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IgeTweenController: () => (/* binding */ IgeTweenController)\n/* harmony export */ });\n/* harmony import */ var _engine_core_IgeEventingClass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/engine/core/IgeEventingClass */ \"./src/engine/core/IgeEventingClass.ts\");\n/* harmony import */ var _engine_instance__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/engine/instance */ \"./src/engine/instance.ts\");\n/* harmony import */ var _engine_utils_arrays__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/engine/utils/arrays */ \"./src/engine/utils/arrays.ts\");\n/* harmony import */ var _engine_utils_easing__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/engine/utils/easing */ \"./src/engine/utils/easing.ts\");\n/* harmony import */ var _enums__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/enums */ \"./src/enums/index.ts\");\n\n\n\n\n\n/**\n * This component is already included in the IgeRoot (ige)\n * instance and is not designed for use in any other way!\n * It handles global tween processing on all tweening values.\n */\nclass IgeTweenController extends _engine_core_IgeEventingClass__WEBPACK_IMPORTED_MODULE_0__.IgeEventingClass {\n    constructor() {\n        super(...arguments);\n        this.classId = \"IgeTweenController\";\n        this.componentId = \"tween\";\n        this._tweens = []; // Set up the array that will hold our active tweens\n        this._tweening = false;\n        /**\n         * Process tweening for the object.\n         */\n        this.update = () => {\n            if (this._tweens && this._tweens.length) {\n                const currentTime = _engine_instance__WEBPACK_IMPORTED_MODULE_1__.ige.engine._tickStart;\n                const tweens = this._tweens;\n                let tweenCount = tweens.length;\n                // Loop the item's tweens\n                while (tweenCount--) {\n                    const tween = tweens[tweenCount];\n                    let stopped = false;\n                    let stepIndex;\n                    // Check if we should be starting this tween yet\n                    if (tween._started || (tween._startTime !== undefined && currentTime >= tween._startTime)) {\n                        if (!tween._started) {\n                            // Check if the tween's step is -1 indicating no step\n                            // data has been set up yet\n                            if (tween._currentStep === -1) {\n                                // Set up the tween step now\n                                tween._currentStep = 0;\n                                this._setupStep(tween, false);\n                            }\n                            // Check if we have a beforeTween callback to fire\n                            if (typeof tween._beforeTween === \"function\") {\n                                // Fire the beforeTween callback\n                                tween._beforeTween(tween);\n                                // Delete the callback, so we don't store it any longer\n                                delete tween._beforeTween;\n                            }\n                            // Check if we have a beforeStep callback to fire\n                            if (typeof tween._beforeStep === \"function\") {\n                                // Fire the beforeStep callback\n                                if (tween._stepDirection) {\n                                    stepIndex = tween._steps.length - (tween._currentStep + 1);\n                                }\n                                else {\n                                    stepIndex = tween._currentStep;\n                                }\n                                tween._beforeStep(tween, stepIndex);\n                            }\n                            tween._started = true;\n                        }\n                        const deltaTime = currentTime - tween._startTime; // Delta from start time to current time\n                        const destTime = tween._destTime;\n                        const easing = tween._selectedEasing;\n                        // Check if the tween has reached its destination based upon\n                        // the current time\n                        if (deltaTime >= destTime) {\n                            // The tween time indicates the tween has ended so set to\n                            // the ending value\n                            const targets = tween._targetData;\n                            for (const targetIndex in targets) {\n                                if (targets.hasOwnProperty(targetIndex)) {\n                                    const item = targets[targetIndex];\n                                    const targetProp = item.targetObj;\n                                    let targetPropVal = targetProp[item.propName];\n                                    let currentDelta;\n                                    // Check if the destination time is not zero\n                                    // because otherwise the easing method will provide\n                                    // a divide by zero error resulting in a NaN value\n                                    if (destTime !== 0) {\n                                        // Add the delta amount to destination\n                                        currentDelta = _engine_utils_easing__WEBPACK_IMPORTED_MODULE_3__.easingFunctions[easing](destTime, item.deltaVal, destTime);\n                                    }\n                                    else {\n                                        currentDelta = item.deltaVal;\n                                    }\n                                    targetPropVal += currentDelta - item.oldDelta;\n                                    // Round the value to correct floating point operation imprecision\n                                    const roundingPrecision = Math.pow(10, 15 - targetPropVal.toFixed(0).toString().length);\n                                    targetProp[item.propName] =\n                                        Math.round(targetPropVal * roundingPrecision) / roundingPrecision;\n                                }\n                            }\n                            // Check if we have a afterStep callback to fire\n                            if (typeof tween._afterStep === \"function\") {\n                                // Fire the afterStep\n                                if (tween._stepDirection) {\n                                    stepIndex = tween._steps.length - (tween._currentStep + 1);\n                                }\n                                else {\n                                    stepIndex = tween._currentStep;\n                                }\n                                tween._afterStep(tween, stepIndex);\n                            }\n                            if (tween._steps.length === tween._currentStep + 1) {\n                                // The tween has ended, is the tween repeat mode enabled?\n                                if (tween._repeatMode) {\n                                    // We have a repeat mode, lets check for a count\n                                    if (tween._repeatCount !== -1) {\n                                        // Check if the repeat count has reached the\n                                        // number of repeats we wanted\n                                        tween._repeatedCount++;\n                                        if (tween._repeatCount === tween._repeatedCount) {\n                                            // The tween has ended\n                                            stopped = true;\n                                        }\n                                    }\n                                    if (!stopped) {\n                                        // Work out what mode we're running on\n                                        if (tween._repeatMode === 1) {\n                                            tween._currentStep = 0;\n                                        }\n                                        if (tween._repeatMode === 2) {\n                                            // We are on \"reverse loop\" mode so now\n                                            // reverse the tween's steps and then\n                                            // start from step zero\n                                            tween._stepDirection = !tween._stepDirection;\n                                            tween._steps.reverse();\n                                            tween._currentStep = 1;\n                                        }\n                                        // Check if we have a stepsComplete callback to fire\n                                        // TODO this is commented because I couldn't find this property anywhere but could be that I've missed something\n                                        // if (typeof (tween._stepsComplete) === \"function\") {\n                                        // \t// Fire the stepsComplete callback\n                                        // \ttween._stepsComplete(tween, tween._currentStep);\n                                        // }\n                                        // Check if we have a beforeStep callback to fire\n                                        if (typeof tween._beforeStep === \"function\") {\n                                            // Fire the beforeStep callback\n                                            if (tween._stepDirection) {\n                                                stepIndex = tween._steps.length - (tween._currentStep + 1);\n                                            }\n                                            else {\n                                                stepIndex = tween._currentStep;\n                                            }\n                                            tween._beforeStep(tween, stepIndex);\n                                        }\n                                        this._setupStep(tween, true);\n                                    }\n                                }\n                                else {\n                                    stopped = true;\n                                }\n                                if (stopped) {\n                                    // Now stop tweening this tween\n                                    tween.stop();\n                                    // If there is a callback, call it\n                                    if (typeof tween._afterTween === \"function\") {\n                                        // Fire the afterTween callback\n                                        tween._afterTween(tween);\n                                        // Delete the callback so we don't store it any longer\n                                        delete tween._afterTween;\n                                    }\n                                }\n                            }\n                            else {\n                                // Start the next step\n                                tween._currentStep++;\n                                // Check if we have a beforeStep callback to fire\n                                if (typeof tween._beforeStep === \"function\") {\n                                    // Fire the beforeStep callback\n                                    if (tween._stepDirection) {\n                                        stepIndex = tween._steps.length - (tween._currentStep + 1);\n                                    }\n                                    else {\n                                        stepIndex = tween._currentStep;\n                                    }\n                                    tween._beforeStep(tween, stepIndex);\n                                }\n                                this._setupStep(tween, true);\n                            }\n                            if (typeof tween._afterChange === \"function\") {\n                                tween._afterChange(tween, stepIndex);\n                            }\n                        }\n                        else {\n                            // The tween is still active, process the tween by passing its details\n                            // to the selected easing method\n                            const targets = tween._targetData;\n                            for (const targetIndex in targets) {\n                                if (targets.hasOwnProperty(targetIndex)) {\n                                    const item = targets[targetIndex];\n                                    const currentDelta = _engine_utils_easing__WEBPACK_IMPORTED_MODULE_3__.easingFunctions[easing](deltaTime, item.deltaVal, destTime);\n                                    item.targetObj[item.propName] += currentDelta - item.oldDelta;\n                                    item.oldDelta = currentDelta;\n                                }\n                            }\n                            if (typeof tween._afterChange === \"function\") {\n                                tween._afterChange(tween, stepIndex);\n                            }\n                        }\n                    }\n                }\n            }\n        };\n    }\n    isReady() {\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                _engine_instance__WEBPACK_IMPORTED_MODULE_1__.ige.dependencies.waitFor([\"engine\"], () => {\n                    // Add the tween behaviour to the entity\n                    _engine_instance__WEBPACK_IMPORTED_MODULE_1__.ige.engine.addBehaviour(_enums__WEBPACK_IMPORTED_MODULE_4__.IgeBehaviourType.preUpdate, \"tween\", this.update);\n                    resolve();\n                });\n            }, 1);\n        });\n    }\n    /**\n     * Start tweening particular properties for the object.\n     * @param {IgeTween} tween The tween to start.\n     * @return {number} The index of the added tween or -1 on error.\n     */\n    start(tween) {\n        if (tween._startTime !== undefined && tween._startTime > _engine_instance__WEBPACK_IMPORTED_MODULE_1__.ige.engine._currentTime) {\n            // The tween is scheduled for later\n            // Push the tween into the IgeTweenController's _tweens array\n            this._tweens.push(tween);\n        }\n        else {\n            // The tween should start immediately\n            tween._currentStep = 0;\n            // Set up the tweens step\n            if (this._setupStep(tween, false)) {\n                // Push the tween into the IgeTweenController's _tweens array\n                this._tweens.push(tween);\n            }\n        }\n        // Enable tweening on the IgeTweenController\n        this.enable();\n        // Return the tween\n        return tween;\n    }\n    _setupStep(tween, newTime = false) {\n        const targetObj = tween._targetObj, step = tween._steps[tween._currentStep], targetData = [];\n        let propertyNameAndValue = {}, // = tween._propertyObj\n        propertyIndex;\n        if (step) {\n            propertyNameAndValue = step.props;\n        }\n        if (!targetObj) {\n            throw new Error(\"Cannot start tweening properties of the specified object because it does not exist!\");\n        }\n        // Check / fill some option defaults\n        if (tween._currentStep === 0 && !newTime) {\n            // Because we are on step zero we can check for a start time\n            if (tween._startTime === undefined) {\n                tween._startTime = _engine_instance__WEBPACK_IMPORTED_MODULE_1__.ige.engine._currentTime;\n            }\n        }\n        else {\n            // We're not on step zero anymore so the new step start time\n            // is NOW!\n            tween._startTime = _engine_instance__WEBPACK_IMPORTED_MODULE_1__.ige.engine._currentTime;\n        }\n        const durationMs = step.durationMs ? step.durationMs : tween._durationMs;\n        tween._selectedEasing = step.easing ? step.easing : tween._easing;\n        // Calculate the end time\n        tween._endTime = tween._startTime + durationMs;\n        for (propertyIndex in propertyNameAndValue) {\n            if (propertyNameAndValue.hasOwnProperty(propertyIndex)) {\n                targetData.push({\n                    targetObj,\n                    propName: propertyIndex,\n                    deltaVal: propertyNameAndValue[propertyIndex] - (step.isDelta ? 0 : targetObj[propertyIndex]), // The diff between end and start values\n                    oldDelta: 0 // Var to save the old delta in order to get the actual difference data.\n                });\n            }\n        }\n        tween._targetData = targetData;\n        tween._destTime = tween._endTime - tween._startTime;\n        return tween; // Return the tween\n    }\n    /**\n     * Removes the specified tween from the active tween list.\n     * @param {IgeTween} tween The tween to stop.\n     */\n    stop(tween) {\n        // Store the new tween details in the item\n        (0,_engine_utils_arrays__WEBPACK_IMPORTED_MODULE_2__.arrPull)(this._tweens, tween);\n        if (!this._tweens.length) {\n            // Disable tweening on this item as there are\n            // no more tweens to process\n            this.disable();\n        }\n        return this;\n    }\n    /**\n     * Stop all tweening for the object.\n     */\n    stopAll() {\n        // Disable tweening\n        this.disable();\n        // Remove all tween details\n        this._tweens = [];\n        return this;\n    }\n    /**\n     * Enable tweening for the object.\n     */\n    enable() {\n        // Check if the item is currently tweening\n        if (!this._tweening) {\n            // Set the item to tweening\n            this._tweening = true;\n        }\n        return this;\n    }\n    /**\n     * Disable tweening for the object.\n     */\n    disable() {\n        // Check if the item is currently tweening\n        if (this._tweening) {\n            // Set the item to not tweening\n            this._tweening = false;\n        }\n        return this;\n    }\n}\nIgeTweenController.componentTargetClass = \"Ige\";\n\n\n//# sourceURL=webpack://@irrelon/ige/./src/engine/core/IgeTweenController.ts?");

/***/ }),

/***/ "./src/engine/utils/easing.ts":
/*!************************************!*\
  !*** ./src/engine/utils/easing.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   easingFunctions: () => (/* binding */ easingFunctions),\n/* harmony export */   inBack: () => (/* binding */ inBack),\n/* harmony export */   inBounce: () => (/* binding */ inBounce),\n/* harmony export */   inCirc: () => (/* binding */ inCirc),\n/* harmony export */   inCubic: () => (/* binding */ inCubic),\n/* harmony export */   inElastic: () => (/* binding */ inElastic),\n/* harmony export */   inExpo: () => (/* binding */ inExpo),\n/* harmony export */   inOutBack: () => (/* binding */ inOutBack),\n/* harmony export */   inOutBounce: () => (/* binding */ inOutBounce),\n/* harmony export */   inOutCirc: () => (/* binding */ inOutCirc),\n/* harmony export */   inOutCubic: () => (/* binding */ inOutCubic),\n/* harmony export */   inOutElastic: () => (/* binding */ inOutElastic),\n/* harmony export */   inOutExpo: () => (/* binding */ inOutExpo),\n/* harmony export */   inOutQuad: () => (/* binding */ inOutQuad),\n/* harmony export */   inOutQuart: () => (/* binding */ inOutQuart),\n/* harmony export */   inOutQuint: () => (/* binding */ inOutQuint),\n/* harmony export */   inOutSine: () => (/* binding */ inOutSine),\n/* harmony export */   inQuad: () => (/* binding */ inQuad),\n/* harmony export */   inQuart: () => (/* binding */ inQuart),\n/* harmony export */   inQuint: () => (/* binding */ inQuint),\n/* harmony export */   inSine: () => (/* binding */ inSine),\n/* harmony export */   none: () => (/* binding */ none),\n/* harmony export */   outBack: () => (/* binding */ outBack),\n/* harmony export */   outBounce: () => (/* binding */ outBounce),\n/* harmony export */   outCirc: () => (/* binding */ outCirc),\n/* harmony export */   outCubic: () => (/* binding */ outCubic),\n/* harmony export */   outElastic: () => (/* binding */ outElastic),\n/* harmony export */   outExpo: () => (/* binding */ outExpo),\n/* harmony export */   outInBack: () => (/* binding */ outInBack),\n/* harmony export */   outInBounce: () => (/* binding */ outInBounce),\n/* harmony export */   outInCirc: () => (/* binding */ outInCirc),\n/* harmony export */   outInCubic: () => (/* binding */ outInCubic),\n/* harmony export */   outInElastic: () => (/* binding */ outInElastic),\n/* harmony export */   outInExpo: () => (/* binding */ outInExpo),\n/* harmony export */   outInQuart: () => (/* binding */ outInQuart),\n/* harmony export */   outInQuint: () => (/* binding */ outInQuint),\n/* harmony export */   outInSine: () => (/* binding */ outInSine),\n/* harmony export */   outQuad: () => (/* binding */ outQuad),\n/* harmony export */   outQuart: () => (/* binding */ outQuart),\n/* harmony export */   outQuint: () => (/* binding */ outQuint),\n/* harmony export */   outSine: () => (/* binding */ outSine)\n/* harmony export */ });\n// Easing equations converted from AS to JS from original source at\n// http://robertpenner.com/easing/\n// I believe that t = time or progression, c = start value, d = delta between\n// start time and current time - Rob (Irrelon)\nconst none = (t, c, d) => {\n    return (c * t) / d;\n};\nconst inQuad = (t, c, d) => {\n    return c * (t /= d) * t;\n};\nconst outQuad = (t, c, d) => {\n    return -c * (t /= d) * (t - 2);\n};\nconst inOutQuad = (t, c, d) => {\n    if ((t /= d / 2) < 1) {\n        return (c / 2) * t * t;\n    }\n    return (-c / 2) * (--t * (t - 2) - 1);\n};\nconst inCubic = (t, c, d) => {\n    return c * (t /= d) * t * t;\n};\nconst outCubic = (t, c, d) => {\n    return c * ((t = t / d - 1) * t * t + 1);\n};\nconst inOutCubic = (t, c, d) => {\n    if ((t /= d / 2) < 1) {\n        return (c / 2) * t * t * t;\n    }\n    return (c / 2) * ((t -= 2) * t * t + 2);\n};\nconst outInCubic = (t, c, d) => {\n    if (t < d / 2) {\n        return outCubic(t * 2, c / 2, d);\n    }\n    return inCubic(t * 2 - d, c / 2, c / 2);\n};\nconst inQuart = (t, c, d) => {\n    return c * (t /= d) * t * t * t;\n};\nconst outQuart = (t, c, d) => {\n    return -c * ((t = t / d - 1) * t * t * t - 1);\n};\nconst inOutQuart = (t, c, d) => {\n    if ((t /= d / 2) < 1) {\n        return (c / 2) * t * t * t * t;\n    }\n    return (-c / 2) * ((t -= 2) * t * t * t - 2);\n};\nconst outInQuart = (t, c, d) => {\n    if (t < d / 2) {\n        return outQuart(t * 2, c / 2, d);\n    }\n    return inQuart(t * 2 - d, c / 2, c / 2);\n};\nconst inQuint = (t, c, d) => {\n    return c * (t /= d) * t * t * t * t;\n};\nconst outQuint = (t, c, d) => {\n    return c * ((t = t / d - 1) * t * t * t * t + 1);\n};\nconst inOutQuint = (t, c, d) => {\n    if ((t /= d / 2) < 1) {\n        return (c / 2) * t * t * t * t * t;\n    }\n    return (c / 2) * ((t -= 2) * t * t * t * t + 2);\n};\nconst outInQuint = (t, c, d) => {\n    if (t < d / 2) {\n        return outQuint(t * 2, c / 2, d);\n    }\n    return inQuint(t * 2 - d, c / 2, c / 2);\n};\nconst inSine = (t, c, d) => {\n    return -c * Math.cos((t / d) * (Math.PI / 2)) + c;\n};\nconst outSine = (t, c, d) => {\n    return c * Math.sin((t / d) * (Math.PI / 2));\n};\nconst inOutSine = (t, c, d) => {\n    return (-c / 2) * (Math.cos((Math.PI * t) / d) - 1);\n};\nconst outInSine = (t, c, d) => {\n    if (t < d / 2) {\n        return outSine(t * 2, c / 2, d);\n    }\n    return inSine(t * 2 - d, c / 2, c / 2);\n};\nconst inExpo = (t, c, d) => {\n    return t === 0 ? 0 : c * Math.pow(2, 10 * (t / d - 1)) - c * 0.001;\n};\nconst outExpo = (t, c, d) => {\n    return t === d ? c : c * 1.001 * (-Math.pow(2, (-10 * t) / d) + 1);\n};\nconst inOutExpo = (t, c, d) => {\n    if (t === 0) {\n        return 0;\n    }\n    if (t === d) {\n        return c;\n    }\n    if ((t /= d / 2) < 1) {\n        return (c / 2) * Math.pow(2, 10 * (t - 1)) - c * 0.0005;\n    }\n    return (c / 2) * 1.0005 * (-Math.pow(2, -10 * --t) + 2);\n};\nconst outInExpo = (t, c, d) => {\n    if (t < d / 2) {\n        return outExpo(t * 2, c / 2, d);\n    }\n    return inExpo(t * 2 - d, c / 2, c / 2);\n};\nconst inCirc = (t, c, d) => {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1);\n};\nconst outCirc = (t, c, d) => {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t);\n};\nconst inOutCirc = (t, c, d) => {\n    if ((t /= d / 2) < 1) {\n        return (-c / 2) * (Math.sqrt(1 - t * t) - 1);\n    }\n    return (c / 2) * (Math.sqrt(1 - (t -= 2) * t) + 1);\n};\nconst outInCirc = (t, c, d) => {\n    if (t < d / 2) {\n        return outCirc(t * 2, c / 2, d);\n    }\n    return inCirc(t * 2 - d, c / 2, c / 2);\n};\nconst inElastic = (t, c, d, a, p) => {\n    let s;\n    if (t === 0) {\n        return 0;\n    }\n    if ((t /= d) === 1) {\n        return c;\n    }\n    if (!p) {\n        p = d * 0.3;\n    }\n    if (!a || a < Math.abs(c)) {\n        a = c;\n        s = p / 4;\n    }\n    else {\n        s = (p / (2 * Math.PI)) * Math.asin(c / a);\n    }\n    return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin(((t * d - s) * (2 * Math.PI)) / p));\n};\nconst outElastic = (t, c, d, a, p) => {\n    let s;\n    if (t === 0) {\n        return 0;\n    }\n    if ((t /= d) === 1) {\n        return c;\n    }\n    if (!p) {\n        p = d * 0.3;\n    }\n    if (!a || a < Math.abs(c)) {\n        a = c;\n        s = p / 4;\n    }\n    else {\n        s = (p / (2 * Math.PI)) * Math.asin(c / a);\n    }\n    return a * Math.pow(2, -10 * t) * Math.sin(((t * d - s) * (2 * Math.PI)) / p) + c;\n};\nconst inOutElastic = (t, c, d, a, p) => {\n    let s;\n    if (t === 0) {\n        return 0;\n    }\n    if ((t /= d / 2) === 2) {\n        return c;\n    }\n    if (!p) {\n        p = d * (0.3 * 1.5);\n    }\n    if (!a || a < Math.abs(c)) {\n        a = c;\n        s = p / 4;\n    }\n    else {\n        s = (p / (2 * Math.PI)) * Math.asin(c / a);\n    }\n    if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin(((t * d - s) * (2 * Math.PI)) / p));\n    }\n    return a * Math.pow(2, -10 * (t -= 1)) * Math.sin(((t * d - s) * (2 * Math.PI)) / p) * 0.5 + c;\n};\nconst outInElastic = (t, c, d, a, p) => {\n    if (t < d / 2) {\n        return outElastic(t * 2, c / 2, d, a, p);\n    }\n    return inElastic(t * 2 - d, c / 2, c / 2, d, a);\n};\nconst inBack = (t, c, d, s) => {\n    if (s === undefined) {\n        s = 1.70158;\n    }\n    return c * (t /= d) * t * ((s + 1) * t - s);\n};\nconst outBack = (t, c, d, s) => {\n    if (s === undefined) {\n        s = 1.70158;\n    }\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1);\n};\nconst inOutBack = (t, c, d, s) => {\n    if (s === undefined) {\n        s = 1.70158;\n    }\n    if ((t /= d / 2) < 1) {\n        return (c / 2) * (t * t * (((s *= 1.525) + 1) * t - s));\n    }\n    return (c / 2) * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n};\nconst outInBack = (t, c, d, s) => {\n    if (t < d / 2) {\n        return outBack(t * 2, c / 2, d, s);\n    }\n    return inBack(t * 2 - d, c / 2, c / 2, d);\n};\nconst inBounce = (t, c, d) => {\n    return c - outBounce(d - t, 0, c);\n};\nconst outBounce = (t, c, d) => {\n    if ((t /= d) < 1 / 2.75) {\n        return c * (7.5625 * t * t);\n    }\n    else if (t < 2 / 2.75) {\n        return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75);\n    }\n    else if (t < 2.5 / 2.75) {\n        return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375);\n    }\n    else {\n        return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375);\n    }\n};\nconst inOutBounce = (t, c, d) => {\n    if (t < d / 2) {\n        return inBounce(t * 2, 0, c) * 0.5;\n    }\n    else {\n        return outBounce(t * 2 - d, 0, c) * 0.5 + c * 0.5;\n    }\n};\nconst outInBounce = (t, c, d) => {\n    if (t < d / 2) {\n        return outBounce(t * 2, c / 2, d);\n    }\n    return inBounce(t * 2 - d, c / 2, c / 2);\n};\nconst easingFunctions = {\n    none,\n    inQuad,\n    outQuad,\n    inOutQuad,\n    inCubic,\n    outCubic,\n    inOutCubic,\n    outInCubic,\n    inQuart,\n    outQuart,\n    inOutQuart,\n    outInQuart,\n    inQuint,\n    outQuint,\n    inOutQuint,\n    outInQuint,\n    inSine,\n    outSine,\n    inOutSine,\n    outInSine,\n    inExpo,\n    outExpo,\n    inOutExpo,\n    outInExpo,\n    inCirc,\n    outCirc,\n    inOutCirc,\n    outInCirc,\n    inElastic,\n    outElastic,\n    inOutElastic,\n    outInElastic,\n    inBack,\n    outBack,\n    inOutBack,\n    outInBack,\n    inBounce,\n    outBounce,\n    inOutBounce,\n    outInBounce\n};\n\n\n//# sourceURL=webpack://@irrelon/ige/./src/engine/utils/easing.ts?");

/***/ })

}]);